@startuml

class Person {
  # name: std::string

  + Person(n: const std::string&)
  + ~Person() virtual
  + reactToNewPerson(other: const Person*): void virtual pure
  + getName(): std::string const
}

class Girl {
  + Girl(n: const std::string&)
  + reactToNewPerson(other: const Person*): void override
}

class YoungMan {
  + YoungMan(n: const std::string&)
  + reactToNewPerson(other: const Person*): void override
}

class Utils {
  + showAllReactions(people: const std::vector<std::unique_ptr<Person>>&): void
  + addGirl(people: std::vector<std::unique_ptr<Person>>&): void
  + addYoungMan(people: std::vector<std::unique_ptr<Person>>&): void
  + handleMenuChoice(choice: int, people: std::vector<std::unique_ptr<Person>>&): void
}

Person <|-- Girl
Person <|-- YoungMan

Utils ..> Person
Utils ..> Girl
Utils ..> YoungMan


@enduml